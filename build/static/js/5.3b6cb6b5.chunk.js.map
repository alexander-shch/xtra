{"version":3,"sources":["pages/buildings/add-update-buildings/addUpdateBuilding.js"],"names":["element","icon","faSave","withRouter","history","addNewBuilding","updateBuilding","match","getSingleBuilding","singleBuilding","clearSingle","error","process","buildingID","params","BuildingId","useState","name","active","buildingDetails","setBuildingDetail","useEffect","push","handleSubmit","e","a","preventDefault","console","log","handleChange","target","value","onSubmit","type","label","hebrew","required","className","save","loading","onClick","forgot"],"mappings":"4OAUMA,EAAU,kBAAC,IAAD,CAAiBC,KAAMC,MAmGxBC,uBAjGW,SAAC,GAUpB,IATLC,EASI,EATJA,QACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,MACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,MACAC,EACI,EADJA,QAEMC,EAAaN,EAAMO,OAAOC,WAD5B,EAEyCC,mBAAS,CACpDC,KAAM,GACNC,QAAQ,IAJN,mBAEGC,EAFH,KAEoBC,EAFpB,KAOJC,qBAAU,WACJR,GACFL,EAAkBK,KAEnB,IAEHQ,qBAAU,WACR,GAAIZ,EAAgB,CAAC,IACXQ,EAAiBR,EAAjBQ,KAAMC,EAAWT,EAAXS,OACdE,EAAkB,CAAEH,OAAMC,WAExBP,IACFP,EAAQkB,KAAK,wBACbZ,OAED,CAACD,EAAgBE,IAtBhB,IAwBEM,EAAiBE,EAAjBF,KAAMC,EAAWC,EAAXD,OAENK,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACnBD,EAAEE,kBACEb,EAFe,0CAITP,EAAeO,EAAYI,EAAMC,GAJxB,uDAMfS,QAAQC,IAAR,MANe,2DAUTvB,EAAeY,EAAMC,GAVZ,2DAYfS,QAAQC,IAAR,MAZe,QAenBxB,EAAQkB,KAAK,wBAfM,iEAAH,sDAiBZO,EAAe,SAACL,GAAO,IAAD,EACFA,EAAEM,OAAlBb,EADkB,EAClBA,KAAMc,EADY,EACZA,MACdX,EAAkB,2BAAKD,GAAN,kBAAwBF,EAAOc,MASlD,OACE,kBAAC,IAAD,KACE,4BAAKlB,EAAa,iCAAU,kCAC5B,0BAAMmB,SAAUT,GACd,kBAAC,IAAD,CACEN,KAAK,OACLgB,KAAK,OACLC,MAAM,8CACNH,MAAOd,EACPY,aAAcA,EACdM,OAAO,OACPC,UAAQ,IAEV,kBAAC,IAAD,CACEnB,KAAK,SACLiB,MAAM,2BACNH,MAAOb,EACPW,aAAcA,EACdO,UAAQ,IAEV,yBAAKC,UAAU,WACb,kBAAC,IAAD,CAAUC,MAAI,EAACC,QAAS3B,GACrBZ,GAEH,kBAAC,IAAD,CAAUiC,KAAK,SAASO,QAAS,kBA9BvCpC,EAAQkB,KAAK,6BACTT,GACFH,MA4BqD+B,QAAM,GAAvD","file":"static/js/5.3b6cb6b5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport InputField from '../../../component/inputs/input-field/InputField';\nimport SelectInput from '../../../component/inputs/select-input/SelectInput';\n\nimport MyButton from '../../../component/my-button/button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport { withRouter } from 'react-router-dom';\nimport { UpdatePageContainer } from '../../../component/global-style/settingsSection';\n\nconst element = <FontAwesomeIcon icon={faSave} />;\n\nconst AddUpdateBuilding = ({\n  history,\n  addNewBuilding,\n  updateBuilding,\n  match,\n  getSingleBuilding,\n  singleBuilding,\n  clearSingle,\n  error,\n  process,\n}) => {\n  const buildingID = match.params.BuildingId;\n  const [buildingDetails, setBuildingDetail] = useState({\n    name: '',\n    active: true,\n  });\n\n  useEffect(() => {\n    if (buildingID) {\n      getSingleBuilding(buildingID);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (singleBuilding) {\n      const { name, active } = singleBuilding;\n      setBuildingDetail({ name, active });\n    }\n    if (error) {\n      history.push('/settings/buildings/');\n      clearSingle();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [singleBuilding, error]);\n\n  let { name, active } = buildingDetails;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (buildingID) {\n      try {\n        await updateBuilding(buildingID, name, active);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        await addNewBuilding(name, active);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    history.push('/settings/buildings/');\n  };\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setBuildingDetail({ ...buildingDetails, [name]: value });\n  };\n  const cancel = () => {\n    history.push('/settings/buildings/');\n    if (buildingID) {\n      clearSingle();\n    }\n  };\n\n  return (\n    <UpdatePageContainer>\n      <h3>{buildingID ? 'עריכה' : 'הוספה'}</h3>\n      <form onSubmit={handleSubmit}>\n        <InputField\n          name='name'\n          type='text'\n          label='שם המקום'\n          value={name}\n          handleChange={handleChange}\n          hebrew='true'\n          required\n        />\n        <SelectInput\n          name='active'\n          label='פעיל'\n          value={active}\n          handleChange={handleChange}\n          required\n        />\n        <div className='buttons'>\n          <MyButton save loading={process}>\n            {element}\n          </MyButton>\n          <MyButton type='button' onClick={() => cancel()} forgot>\n            חזרה\n          </MyButton>\n        </div>\n      </form>\n    </UpdatePageContainer>\n  );\n};\n\nexport default withRouter(AddUpdateBuilding);\n"],"sourceRoot":""}