{"version":3,"sources":["component/calendar/calendar.js","pages/class/edit-class/first-form/FirstForm.js","component/inputs/date-input/DateInput.js","pages/class/edit-class/second-form/SecondForm.js","pages/class/edit-class/update-singel-date/UpdateSingle.js","pages/class/edit-class/EditClass.js"],"names":["React","memo","events","setDateClick","setEventClick","lastDate","jewsihHolydays","eventsToDisplay","map","item","from","Date","toString","slice","to","title","start","end","id","_id","headerToolbar","left","right","validRange","initialDate","direction","locale","height","initialView","editable","selectable","selectMirror","dayMaxEvents","displayEventTime","plugins","dayGridPlugin","interactionPlugin","select","info","startStr","eventClick","eventInfo","event","eventSources","element","icon","faSave","withRouter","buildings","handleChange","handleSubmit","classDetails","history","loading","clearSingle","name","minStudents","maxStudents","building","onSubmit","className","InputField","type","label","value","hebrew","required","defaultValue","onChange","disabled","hidden","key","save","onClick","push","forgot","DataInput","restData","SecondForm","dateHanddleChange","handleDatesSubmit","onDayChange","dateDetails","fromTime","toTime","dayLimiter","dayObj","0","1","2","3","4","5","today","toISOString","min","multiple","Object","keys","day","UpdateSingle","openDeleteBox","closeSingleBox","availabilityId","delete","CalendarWithSpinner","WithSpinner","Calendar","match","addNewClass","updateClass","setAvailability","updateAvailability","deleteAvailability","calenderLoading","setAlert","getSingleClass","singleClass","error","classID","params","useEffect","useState","setClassDetails","availability","limiter","updateSingleBoxDisplay","setDateDetails","confirmMsgView","confirmMsg","setConfirmMsg","lastUpdatedDate","setLastUpdatedDate","e","a","preventDefault","console","log","length","isTimeValid","toTimeArr","split","fromTimeArr","toTimeDate","fromTimeDate","Math","round","useCallback","date","endStr","delteItem","closeDeleteBox","target","MyAlert","valuesArr","Array","selectedOptions","option","eventName","close"],"mappings":"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","file":"static/js/3.ed1abc5f.chunk.js","sourcesContent":["import React from 'react';\nimport './calendar.style.scss';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\n\nconst Calendar = ({\n  events,\n  setDateClick,\n  setEventClick,\n  lastDate,\n  jewsihHolydays,\n}) => {\n  const eventsToDisplay = events\n    ? events.map((item) => {\n        let from = new Date(item.from).toString().slice(15, 21);\n        let to = new Date(item.to).toString().slice(15, 21);\n        return (item = {\n          title: `${to}-${from}`,\n          start: new Date(item.from),\n          end: new Date(item.to),\n          id: item._id,\n        });\n      })\n    : null;\n\n  const handleDateSelect = (info) => {\n    setDateClick(info.startStr);\n  };\n\n  const handleEventClick = (eventInfo) => {\n    setEventClick(eventInfo.event);\n  };\n\n  return (\n    <>\n      <FullCalendar\n        headerToolbar={{\n          left: 'prev,next today',\n          right: 'title',\n        }}\n        validRange={{\n          start: new Date(),\n        }}\n        initialDate={lastDate}\n        direction='rtl'\n        locale='he'\n        height='600px'\n        initialView='dayGridMonth'\n        editable={true}\n        selectable={true}\n        selectMirror={true}\n        dayMaxEvents={true}\n        displayEventTime={false}\n        plugins={[dayGridPlugin, interactionPlugin]}\n        select={handleDateSelect}\n        eventClick={handleEventClick}\n        eventSources={[jewsihHolydays, eventsToDisplay]}\n      />\n    </>\n  );\n};\n\nexport default React.memo(Calendar);\n","import React from 'react';\nimport './firstForm.style.scss';\nimport InputField from '../../../../component/inputs/input-field/InputField';\nimport MyButton from '../../../../component/my-button/button';\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nconst element = <FontAwesomeIcon icon={faSave} />;\n\nconst FirstForm = ({\n  buildings,\n  handleChange,\n  handleSubmit,\n  classDetails,\n  history,\n  loading,\n  clearSingle,\n}) => {\n  const { name, minStudents, maxStudents, building } = classDetails;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className='name-and-building'>\n        <InputField\n          name='name'\n          type='text'\n          label='שם הכיתה'\n          value={name}\n          handleChange={handleChange}\n          hebrew='true'\n          required\n        />\n        <div className='selectbuildingInput'>\n          <select\n            required\n            name='building'\n            className='buildingSelector'\n            defaultValue={building !== null ? building : '1'}\n            onChange={handleChange}\n          >\n            <option value='1' disabled hidden>\n              בחר בניין\n            </option>\n            {buildings.map((item) => (\n              <option key={item._id} value={item._id}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n          <label className='selectInputLabael'>בחר בניין</label>\n        </div>\n      </div>\n      <h4>מספר תלמידים</h4>\n\n      <div className='studNum'>\n        <InputField\n          name='maxStudents'\n          type='number'\n          label='מקסימלי'\n          value={maxStudents}\n          handleChange={handleChange}\n          hebrew='true'\n          required\n        />\n        <InputField\n          name='minStudents'\n          type='number'\n          label='מינימלי'\n          value={minStudents}\n          handleChange={handleChange}\n          hebrew='true'\n          required\n        />\n      </div>\n\n      <div className='buttons'>\n        <MyButton save loading={loading}>\n          {element}\n        </MyButton>\n        <MyButton\n          type='button'\n          onClick={() => {\n            history.push('/settings/list-classes');\n            if (!classDetails) {\n              clearSingle();\n            }\n          }}\n          forgot\n        >\n          ביטול\n        </MyButton>\n      </div>\n    </form>\n  );\n};\n\nexport default withRouter(FirstForm);\n","import React from 'react';\nimport './dateInput.scss';\nconst DataInput = ({ handleChange, label, ...restData }) => {\n  return (\n    <div className='groupDateInput'>\n      <label className='date-input-label'>{label}</label>\n      <div className='Dateinput-continer'>\n        <input className='date-input' onChange={handleChange} {...restData} />\n      </div>\n    </div>\n  );\n};\n\nexport default DataInput;\n","import React from 'react';\nimport DataInput from '../../../../component/inputs/date-input/DateInput';\nimport MyButton from '../../../../component/my-button/button';\nimport './secondForm.style.scss';\nconst SecondForm = ({\n  dateHanddleChange,\n  handleDatesSubmit,\n  onDayChange,\n  dateDetails,\n}) => {\n  const { from, to, fromTime, toTime, dayLimiter } = dateDetails;\n  const dayObj = {\n    0: 'יום ראשון',\n    1: 'יום שני',\n    2: 'יום שלישי',\n    3: 'יום רביעי',\n    4: 'יום חמישי',\n    5: 'יום שישי',\n  };\n  let today = new Date().toISOString().slice(0, 10);\n\n  return (\n    <>\n      <h4>זמינות</h4>\n      <form onSubmit={handleDatesSubmit} className='dateForm'>\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='from'\n          value={from}\n          label='מתאריך'\n          type='date'\n          min={today}\n        />\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='to'\n          value={to}\n          label='עד תאריך'\n          type='date'\n          min={from}\n        />\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='fromTime'\n          value={fromTime}\n          label='משעה'\n          type='time'\n        />\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='toTime'\n          value={toTime}\n          label='עד שעה'\n          type='time'\n        />\n        <select\n          multiple\n          onChange={onDayChange}\n          name='limiter'\n          className='daySelector'\n          value={dayLimiter}\n        >\n          {Object.keys(dayObj).map((day) => (\n            <option key={day} value={day}>\n              {dayObj[day]}\n            </option>\n          ))}\n        </select>\n        <MyButton>עדכן</MyButton>\n      </form>\n    </>\n  );\n};\n\nexport default SecondForm;\n","import React from 'react';\nimport DataInput from '../../../../component/inputs/date-input/DateInput';\nimport MyButton from '../../../../component/my-button/button';\nimport './updateSingle.style.scss';\n\nconst UpdateSingle = ({\n  dateHanddleChange,\n  dateDetails,\n  openDeleteBox,\n  closeSingleBox,\n  handleDatesSubmit,\n}) => {\n  const { from, availabilityId, fromTime, toTime } = dateDetails;\n  let today = new Date().toISOString().slice(0, 10);\n  return (\n    <div className='updateSingle'>\n      <h3>עידכון זמינות</h3>\n      <form onSubmit={handleDatesSubmit} className='dateForm'>\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='from'\n          label='מתאריך'\n          type='date'\n          value={from}\n          min={today}\n        />\n\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='fromTime'\n          label='משעה'\n          type='time'\n          value={fromTime}\n        />\n\n        <DataInput\n          handleChange={dateHanddleChange}\n          name='toTime'\n          label='עד שעה'\n          type='time'\n          value={toTime}\n        />\n        <div className='singleBtns'>\n          <MyButton>עדכן</MyButton>\n          <MyButton type='button' onClick={closeSingleBox} forgot>\n            חזרה\n          </MyButton>\n          {availabilityId ? (\n            <MyButton delete onClick={openDeleteBox} type='button'>\n              מחק זמינות\n            </MyButton>\n          ) : null}\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default UpdateSingle;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './addUpdateClasses.style.scss';\nimport Calendar from '../../../component/calendar/calendar';\nimport FirstForm from './first-form/FirstForm';\nimport SecondForm from './second-form/SecondForm';\nimport UpdateSingle from './update-singel-date/UpdateSingle';\nimport { withRouter } from 'react-router-dom';\nimport DeleteDate from '../../../component/delete-box/deleteBox';\nimport MyAlert from '../../../component/my-alert/MyAlert';\nimport WithSpinner from '../../../component/spinner/withSpinner';\nimport { UpdatePageContainer } from '../../../component/global-style/settingsSection';\n\nconst CalendarWithSpinner = WithSpinner(Calendar);\n\nconst EditClass = ({\n  buildings,\n  match,\n  addNewClass,\n  history,\n  updateClass,\n  setAvailability,\n  loading,\n  updateAvailability,\n  deleteAvailability,\n  calenderLoading,\n  setAlert,\n  jewsihHolydays,\n  getSingleClass,\n  singleClass,\n  clearSingle,\n  error,\n}) => {\n  const classID = match.params.classID;\n\n  useEffect(() => {\n    if (classID) {\n      getSingleClass(classID);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [classDetails, setClassDetails] = useState({\n    name: '',\n    minStudents: '',\n    maxStudents: '',\n    building: '',\n  });\n  useEffect(() => {\n    if (singleClass) {\n      const { name, minStudents, maxStudents, building } = singleClass;\n      setClassDetails({ name, minStudents, maxStudents, building });\n    }\n    if (error) {\n      history.push('/settings/list-classes');\n      clearSingle();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [singleClass, error]);\n\n  const events = singleClass ? singleClass.availability : null;\n  const title = singleClass ? 'עדכון כיתה' : 'הוספת כיתה';\n\n  const [dateDetails, setDateDetails] = useState({\n    from: '',\n    to: '',\n    fromTime: '',\n    toTime: '',\n    limiter: [],\n    updateSingleBoxDisplay: false,\n    availabilityId: null,\n  });\n\n  const [confirmMsg, setConfirmMsg] = useState({\n    confirmMsgView: false,\n    name: '',\n  });\n\n  const [lastUpdatedDate, setLastUpdatedDate] = useState(new Date());\n\n  //------------------------------------------------------------------------\n  const handleSubmit = async (e) => {\n    const { minStudents, maxStudents } = classDetails;\n    e.preventDefault();\n    const { building } = classDetails;\n    if (!building) {\n      setAlert('לא נבחר בניין', 'error');\n      return;\n    }\n    if (minStudents > maxStudents) {\n      setAlert('מספר תלמידים מינמלי גדול ממקסימלי', 'error');\n      return;\n    }\n    if (!classID) {\n      try {\n        await addNewClass(classDetails, history);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    if (classID) {\n      try {\n        await updateClass(classID, classDetails);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  const handleDatesSubmit = async (e) => {\n    e.preventDefault();\n    const { from, to, fromTime, toTime, availabilityId } = dateDetails;\n    if (\n      from.length < 1 ||\n      to.length < 1 ||\n      fromTime.length < 1 ||\n      toTime.length < 1\n    ) {\n      setAlert('יש למלא תאריכים ושעות', 'error');\n      return;\n    }\n\n    if (isTimeValid(toTime, fromTime) < 45) {\n      setAlert('טווח של 45 דק מינמום', 'error');\n      return;\n    } else {\n      setLastUpdatedDate(from);\n      try {\n        availabilityId\n          ? await updateAvailability(dateDetails)\n          : await setAvailability(classID, dateDetails);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    closeSingleBox();\n  };\n\n  const isTimeValid = (toTime, fromTime) => {\n    let toTimeArr = toTime.split(':');\n    let fromTimeArr = fromTime.split(':');\n    let toTimeDate = new Date(0, 0, 0, toTimeArr[0], toTimeArr[1]);\n    let fromTimeDate = new Date(0, 0, 0, fromTimeArr[0], fromTimeArr[1]);\n    let minutes = Math.round((toTimeDate - fromTimeDate) / (1000 * 60));\n    return minutes;\n  };\n\n  const setDateClick = useCallback(\n    (date) => {\n      setDateDetails({\n        ...dateDetails,\n        from: date,\n        to: date,\n        updateSingleBoxDisplay: true,\n        id: null,\n        fromTime: '',\n        toTime: '',\n      });\n    },\n    [dateDetails]\n  );\n\n  const setEventClick = useCallback((eventInfo) => {\n    const { id, startStr, endStr } = eventInfo;\n    let from = startStr.slice(0, 10);\n    let to = endStr.slice(0, 10);\n    let fromTime = startStr.slice(11, 19);\n    let toTime = endStr.slice(11, 19);\n    setDateDetails({\n      availabilityId: id,\n      from: from,\n      to: to,\n      fromTime: fromTime,\n      toTime: toTime,\n      updateSingleBoxDisplay: true,\n    });\n  }, []);\n\n  const openDeleteBox = () => {\n    const { fromTime, toTime } = dateDetails;\n    const eventName = `${fromTime.slice(0, 5)} - ${toTime.slice(0, 5)}`;\n    setConfirmMsg({ confirmMsgView: true, name: eventName });\n  };\n\n  const delteItem = async () => {\n    const { availabilityId, from } = dateDetails;\n    setLastUpdatedDate(from);\n    try {\n      await deleteAvailability(classID, availabilityId);\n    } catch (err) {\n      console.log(err);\n    }\n    closeDeleteBox();\n    closeSingleBox();\n  };\n  const closeDeleteBox = () => {\n    setConfirmMsg({ confirmMsgView: false, name: '' });\n  };\n\n  const closeSingleBox = () => {\n    setDateDetails({\n      ...dateDetails,\n      from: '',\n      to: '',\n      fromTime: '',\n      toTime: '',\n      updateSingleBoxDisplay: false,\n      availabilityId: null,\n    });\n  };\n  //----------------------------------------------------------------\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setClassDetails({ ...classDetails, [name]: value });\n  };\n\n  const dateHanddleChange = (e) => {\n    const { name, value } = e.target;\n    setDateDetails({ ...dateDetails, [name]: value });\n  };\n  const onDayChange = (e) => {\n    let valuesArr = Array.from(\n      e.target.selectedOptions,\n      (option) => option.value\n    );\n    setDateDetails({ ...dateDetails, limiter: valuesArr });\n  };\n\n  //---------------------------------------------------------------\n  const { confirmMsgView } = confirmMsg;\n  const { updateSingleBoxDisplay } = dateDetails;\n  return (\n    <>\n      <MyAlert />\n      <UpdatePageContainer>\n        <div className='classForm'>\n          <h3>{title}</h3>\n\n          <FirstForm\n            loading={loading}\n            buildings={buildings}\n            handleSubmit={handleSubmit}\n            handleChange={handleChange}\n            classDetails={classDetails}\n            clearSingle={clearSingle}\n          />\n          {classID ? (\n            <>\n              <SecondForm\n                onDayChange={onDayChange}\n                handleDatesSubmit={handleDatesSubmit}\n                dateHanddleChange={dateHanddleChange}\n                dateDetails={dateDetails}\n              />\n              <div className='clendar-container'>\n                <CalendarWithSpinner\n                  loading={calenderLoading}\n                  lastDate={lastUpdatedDate}\n                  events={events}\n                  jewsihHolydays={jewsihHolydays}\n                  setDateClick={setDateClick}\n                  setEventClick={setEventClick}\n                />\n              </div>\n              {updateSingleBoxDisplay ? (\n                <UpdateSingle\n                  dateDetails={dateDetails}\n                  dateHanddleChange={dateHanddleChange}\n                  handleDatesSubmit={handleDatesSubmit}\n                  openDeleteBox={openDeleteBox}\n                  closeSingleBox={closeSingleBox}\n                />\n              ) : null}\n              {confirmMsgView ? (\n                <DeleteDate\n                  item={confirmMsg}\n                  delteItem={delteItem}\n                  close={closeDeleteBox}\n                />\n              ) : null}\n            </>\n          ) : null}\n        </div>\n      </UpdatePageContainer>\n    </>\n  );\n};\n\nexport default withRouter(EditClass);\n"],"sourceRoot":""}